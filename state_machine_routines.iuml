@startuml state_machine_routines

!include https://raw.githubusercontent.com/davmf/plantuml-utilities/main/common.iuml

'scale 4096 height

/' Provision for footer with latest date
 ' However, reduces version control usability as it
 ' updates the output artifact every build, regardless of
 ' whether the input has changed
 '/
'right footer Updated %date("yyyy.MM.dd' at 'HH:mm")

hide empty description

skinparam Linetype ortho
skinparam Nodesep 10
skinparam Ranksep 20
skinParam TabSize 2

skinParam TitleFontSize 24

skinparam state {
    BorderColor<<transition>> transparent
    BackgroundColor<<transition>> #F8F8F8
    BorderColor<<hidden>> transparent
    BorderColor<<transition_hidden>> transparent
    BackgroundColor<<hidden>> transparent
    BackgroundColor<<transition_hidden>> transparent
    FontColor<<hidden>> transparent
    FontColor<<transition_hidden>> transparent
    FontSize<<transition>> 10
    FontSize<<proxy>> 8
    FontSize<<transition_hidden>> 10
    FontSize 12
}

skinParam RoundCorner<<transition>> 0
skinParam RoundCorner<<transition_hidden>> 0

skinparam note {
    FontColor<<hidden>> #transparent
    BackgroundColor<<hidden>> #transparent
    BorderColor<<hidden>> #transparent
}

!function $super_state($name, $tags="")
    !if $is_visible($tags)
        !return "state " + %chr(34) + "<size:16>**" + $name + "**" + %chr(34) + " as " + $make_symbol($name)
    !else
        !return "state " + %chr(34) + "<size:16>**" + $name + "**" + %chr(34) + " as " + $make_symbol($name) + " <<hidden>>"
    !endif
!endfunction

!function $event($name)
    !return "**" + $name + "**"
!endfunction

!function $guard($name)
    !return "[" + $name + " ?]"
!endfunction

!function $true()
    !return "true"
!endfunction

!function $false()
    !return "false"
!endfunction

!function $br()
    !return " /<br>"
!endfunction

!procedure $super_state_behaviour($name, $entry="", $do="", $exit="")
    !$name = $make_symbol($name)
    !$text = ""

    !if $entry != ""
        !$entry = $strrepl($entry, "<br>", "|\n| |")
        !$text = $text + "<#transparent,#transparent>|<r>//entry//: |" + $entry + " |"
    !endif

    !if $do != ""
        !$do = $strrepl($do, "<br>", "|\n| |")
        !if $text != ""
            !$text = $text + "\n"
        !else
            !$text = "<#transparent,#transparent>"
        !endif

        !$text = $text + "|<r>//do//: |" + $do + " |"
    !endif

    !if $exit != ""
        !if $text != ""
            !$text = $text + "\n"
        !else
            !$text = "<#transparent,#transparent>"
        !endif

        !$text = $text + "|<r>//exit//: |" + $exit + " |"
    !endif

    !if $text != ""
        $name : $text
    !endif
!endprocedure

' Return whether two sets of tags intersect 
!function $is_str_match($a, $b)
    !if %strpos($a, $b) >= 0 !return %true()
    !return %false()
!endfunction

!procedure $state($name, $entry="", $do="", $exit="", $tags="", $colour="", $ui="")
    !$label = "**" + $name + "**"
    !$text = ""

    !if $entry != ""
        !$entry = $strrepl($entry, "<br>", "|\n| |")
        !$entry = $strrepl($entry, "<br1>", "|\n| |  ")
        !$entry = $strrepl($entry, "<br2>", "|\n| |    ")
        !$text = $text + "<#transparent,#transparent>|<r>//entry//: |" + $entry + " |"
    !endif

    !if $do != ""
        !$do = $strrepl($do, "<br>", "|\n| |")
        !$do = $strrepl($do, "<br1>", "|\n| |  ")
        !$do = $strrepl($do, "<br2>", "|\n| |    ")

        !if $text != ""
            !$text = $text + "\n"
        !else
            !$text = "<#transparent,#transparent>"
        !endif

        !$text = $text + "|<r>//do//: |" + $do + " |"
    !endif

    !if $exit != ""
        !$exit = $strrepl($exit, "<br>", "|\n| |")
        !$exit = $strrepl($exit, "<br1>", "|\n| |  ")
        !$exit = $strrepl($exit, "<br2>", "|\n| |    ")

        !if $text != ""
            !$text = $text + "\n"
        !else
            !$text = "<#transparent,#transparent>"
        !endif

        !$text = $text + "|<r>//exit//: |" + $exit + " |"
    !endif

    !if $ui != "" && $is_visible($tags)
        !$text = $text + "\n" + $ui_content($ui)
    !endif

    !if $colour != ""
        !$colour = %lighten($colour, 98)
    !endif

    !if $text != ""
        !if $is_visible($tags)
            state $make_symbol($name) as "<size:16>$label" $colour : $text
        !else
            state $make_symbol($name) as "<size:16>$label" <<hidden>> : $text
        !endif
    !else
        !if $is_visible($tags)
            state $make_symbol($name) as "<size:16>$label" $colour
        !else
            state $make_symbol($name) as "<size:16>$label" <<hidden>>
        !endif
    !endif
!endprocedure

!procedure $entry_point($name, $tags="")
    !if $is_visible($tags)
        state $make_symbol($name) as " " <<entryPoint_point>>
    !else
        state $make_symbol($name) as " " <<entryPoint_hidden>>
    !endif
!endprocedure

!procedure $exit_point($name, $tags="")
    !if $is_visible($tags)
        state $make_symbol($name) as " " <<exitPoint>>
    !else
        state $make_symbol($name) as " " <<exitPoint_hidden>>
    !endif
!endprocedure

!procedure $join($name, $tags="")
    !if $is_visible($tags)
        state $make_symbol($name) as " " <<join>>
    !else
        state $make_symbol($name) as " " <<join_hidden>>
    !endif
!endprocedure

!procedure $fork($name, $tags="")
    !if $is_visible($tags)
        state $make_symbol($name) as " " <<fork>>
    !else
        state $make_symbol($name) as " " <<fork_hidden>>
    !endif
!endprocedure

!procedure $choice($name, $tags="")
    !if $is_visible($tags)
        state $make_symbol($name) <<choice>>
    !else 
        state $make_symbol($name) <<choice>> #transparent##transparent
    !endif 
!endprocedure

!function $is_proxy_state($name)
    !if %strpos($name, "_proxy") > 0
        !return %true()
    !else
        !return %false()
    !endif
!endfunction

!function $actual_state($proxy_state)
    !$proxy_length = %strlen($proxy_state)
    !return %substr($proxy_state, 0, $proxy_length - 6)
!endfunction


'  +────+
'  │ $a │
'  +─┬──+
'    │
'   $t
'    │
'    V
'  +----+
'  │ $b │
'  +────+
'
!procedure $transition($a, $t="", $b="", $colour="", $note="", $tags="", $note_dir="right", $ui="", $icon="", $down=%true())
    !$a = $make_symbol($a)
    !$b = $make_symbol($b)

    !if $colour == ""
        !$colour = "#Black"
    !endif

    !if $is_visible($tags)
        !$stereotype = "transition"
    !else
        !$stereotype = "transition_hidden"
        !$colour = "#transparent"
    !endif

    !if $t != "" || $ui != "" || $icon != ""
        !$transition_node = $new_node()

        !if $ui != "" && $is_visible($tags)
            !$t = $ui_content($ui + " | " + $t)

            !if $a == "[*]"
                !$a = $new_node()
                state $a <<start>> $colour
            !elseif $b == "[*]"
                !$b = $new_node()
                state $b <<end>> $colour
            !endif

        !elseif $icon != "" && $is_visible($tags)
            !$t = "<color:" + $colour + ">" + $icon + "</color>"

        !else
            !if $a == "[*]"
                !$a = $new_node()
                state $a <<start>> $colour
            !else
                !if $b == "[*]"
                    !$b = $new_node()
                    state $b <<end>> $colour
                !elseif $is_proxy_state($b)
                    !$label = $actual_state($b)
                    !$b = $new_node()
                    !$node_colour = %lighten($colour, 98)
                    state $b as "$label" <<proxy>> $node_colour
                !endif
            !endif

            !$t = "<#transparent,#transparent>|<color:" + $colour + ">" + $t + "|"
            !$repl = "|\n|" + "<color:" + $colour + ">"
            !$t = $strrepl($t, "<br>", $repl)
            !$repl = "|\n|" + "<color:" + $colour + ">  "
            !$t = $strrepl($t, "<br1>", $repl)
            !$repl = "|\n|" + "<color:" + $colour + ">    "
            !$t = $strrepl($t, "<br2>", $repl)
        !endif

        state "$t" as $transition_node <<$stereotype>>

        !if $note != ""
            $add_note($note, $note_dir, $tags, $transition_node)
        !endif

        !if $down
            $a -[$colour]->o $transition_node
            $transition_node -[$colour]-> $b
        !else
            $a -[$colour]>o $transition_node
            $transition_node -[$colour]> $b
        !endif
    !else
        !if $a == "[*]"
            !$a = $new_node()
            state $a <<start>> $colour
        !else
            !if $b == "[*]"
                !$b = $new_node()
                state $b <<end>> $colour
            !elseif $is_proxy_state($b)
                !$label = $actual_state($b)
                !$b = $new_node()
                !$node_colour = %lighten($colour, 98)
                state $b as "$label" <<proxy>> $node_colour
            !endif
        !endif

        !if $down
            $a -[$colour]-> $b
        !else
            $a -[$colour]> $b
        !endif
    !endif
!endprocedure

!procedure $transition_test($a, $t="", $b="", $colour="", $note="", $tags="", $note_dir="right", $test="")
    !if $test == ""
        !log Note: Using default test value!
        !$test = "???"
    !endif

    !$a = $make_symbol($a)
    !$b = $make_symbol($b)

    !if $colour == ""
        !$colour = "#Black"
    !endif

    !if $is_visible($tags)
        !$stereotype = "transition"
    !else
        !$stereotype = "transition_hidden"
        !$colour = "#transparent"
    !endif

    !$test_node = $new_node()

    !$test = $strrepl($test, "<br>", "</color>\n<color:" + $colour + ">")
    !$test = "<color:" + $colour + ">[ " + $test + " ]</color>"

    state "$test" as $test_node <<$stereotype>>

    !if $t != ""
        !$transition_node = $new_node()

        !if $a == "[*]"
            !$a = $new_node()
            state $a <<start>> $colour
        !else
            !if $b == "[*]"
                !$b = $new_node()
                state $b <<end>> $colour
            !endif
        !endif

        !$t = "<#transparent,#transparent>|<color:" + $colour + ">" + $t + "|"
        !$repl = "|\n|" + "<color:" + $colour + ">"
        !$t = $strrepl($t, "<br>", $repl)
        !$repl = "|\n|" + "<color:" + $colour + ">  "
        !$t = $strrepl($t, "<br1>", $repl)
        !$repl = "|\n|" + "<color:" + $colour + ">    "
        !$t = $strrepl($t, "<br2>", $repl)

        state "$t" as $transition_node <<$stereotype>>

        !if $note != ""
            $add_note($note, $note_dir, $tags, $transition_node)
        !endif

        $a -[$colour]->o $transition_node
        $transition_node -[$colour]->o $test_node
        $test_node -[$colour]-> $b
    !else
        !if $a == "[*]"
            !$a = $new_node()
            state $a <<start>> $colour
        !else
            !if $b == "[*]"
                !$b = $new_node()
                state $b <<end>> $colour
            !endif
        !endif

        $a -[$colour]->o $test_node
        $test_node -[$colour]-> $b
    !endif
!endprocedure

!procedure $end_transition($a, $t="", $colour="#Red")
    !$b = $a + "_end"
    state $b <<end>> $colour
    $transition($a, $t, $b, $colour)
!endprocedure

!procedure $error_transition($a, $t="", $colour="#Red", $note="", $tags="")
    !if %not($is_visible($tags))
        !$colour = "#transparent"
    !endif

    !$b = $new_node()
    state $b <<end>> $colour
    $transition($a, $t, $b, $colour, $note=$note, $tags=$tags)
!endprocedure

!procedure $error_input_transition($b, $t="", $colour="#Red", $tags="")
    !if %not($is_visible($tags))
        !$colour = "#transparent"
    !endif

    !$a = "error_" + $b
    state $a <<start>> $colour
    $transition($a, $t, $b, $colour, $tags=$tags)
!endprocedure

!procedure $input_node($node, $colour, $tags="")
    state $node <<start>> $colour
!endprocedure

!procedure $output_node($node, $colour, $tags="")
    state $node <<end>> $colour
!endprocedure

' Create transitions to two other states via a choice
'
'        +-----+                              
'        | $a  |                              
'        +-----+                              
'           |                                 
' $t1, $colour1, $tags1                       
'           |                                 
'         $test1
'           |                                 
'           V
'          / \                                
'         |   ---------------------+          
'          \ /                     |          
'           |                      |          
' $t2=$false(), $colour2, $tags2  $t3=$true(), $colour3, $tags3
'           |                      |          
'           V                      V          
'        +-----+                +-----+       
'        | $b  |                | $c  |       
'        +-----+                +-----+       
'
!procedure $transitions_1_choice( \
        $a, \
        $t1="", \
        $b="", \
        $c="", \
        $colour1="", \
        $tags1="", \
        $test1="", \
        $t2=$false(), \
        $colour2="", \
        $tags2="", \
        $t3=$true(), \
        $colour3="", \
        $tags3="" \
)
    !$choice = $new_node()

    !if $is_visible($tags2) || $is_visible($tags3)
        state $choice <<choice>>
    !else
        state $choice <<choice>> #transparent##transparent
    !endif

    $transition_test($a, $t1, $choice, $colour1, $tags=$tags1, $test=$test1)
    $transition($choice, $t2, $b, $colour2, $tags=$tags2)
    $transition($choice, $t3, $c, $colour3, $tags=$tags3)
!endprocedure

' Choice transition with same target for both choices
!procedure $transitions_1_choice_common($a, $t1="", $b="", $colour1="", $t2=$true(), $colour2="", $t3=$false(), $colour3="", $dir="", $dir_="", $tags1="", $tags2="", $tags3="")
    !$choice = $new_node()
    !$join_node = $new_node()
    $join($join_node, $tags1)

    !if $is_visible($tags2) || $is_visible($tags3)
        state $choice <<choice>>
    !else
        state $choice <<choice>> #transparent##transparent
    !endif

    $transition($a, $t1, $choice, $colour1, $tags=$tags1)
    $transition($choice, $t2, $join_node, $colour2, $tags=$tags2)
    $transition($choice, $t3, $join_node, $colour3, $tags=$tags3)
    $transition($join_node, $t="", $b, $colour=$colour1, $tags=$tags1)
!endprocedure

' Create transitions to three other states via two choices
'
'        +-----+                              
'        | $a  |                              
'        +-----+                              
'           |                                 
' $t1, $colour1, $tags1                       
'           |                                 
'        $test1                               
'           |                                 
'           V
'          / \                                
'         |   ---------------------+          
'          \ /                     |          
'           |                      |          
' $t2=$false(), $colour2, $tags2  $t3=$true(), $colour3, $tags3
'           |                      |          
'           V                   $test3
'        +-----+                   |
'        | $b  |                   V
'        +-----+                  / \                                
'                                |   ---------------------+          
'                                 \ /                     |          
'                                  |                      |          
'                        $t4=$false(), $colour4, $tags4  $t5=$true(), $colour5, $tags5
'                                  |                      |          
'                                  V                      V          
'                               +-----+                +-----+       
'                               | $c  |                | $d  |       
'                               +-----+                +-----+       
'                       
'
!procedure $transitions_2_choices( \
    $a, \
    $t1="", \
    $b="", \
    $c="", \
    $d="", \
    $test1="", \
    $colour1="", \
    $tags1="", \
    $t2=$false(), \
    $colour2="", \
    $tags2="", \
    $t3=$true(), \
    $colour3="", \
    $tags3="", \
    $test3="", \
    $t4=$false(), \
    $colour4="", \
    $tags4="", \
    $t5=$true(), \
    $colour5="", \
    $tags5="" \
)
    !$choice1 = $new_node()

    !if $is_visible($tags2) || $is_visible($tags3)
        state $choice1 <<choice>>
    !else
        state $choice1 <<choice>> #transparent##transparent
    !endif

    !$choice2 = $new_node()

    !if $is_visible($tags4) || $is_visible($tags5)
        state $choice2 <<choice>>
    !else
        state $choice2 <<choice>> #transparent##transparent
    !endif

    $transition_test($a, $t1, $choice1, $colour1, $tags=$tags1, $test=$test1)
    $transition($choice1, $t2, $b, $colour2, $tags=$tags2)
    $transition_test($choice1, $t3, $choice2, $colour3, $tags=$tags3, $test=$test3)
    $transition($choice2, $t4, $c, $colour4, $tags=$tags4)
    $transition($choice2, $t5, $d, $colour5, $tags=$tags5)
!endprocedure

' Create transitions to four other states via three choices
'
'        +-----+                              
'        | $a  |                              
'        +-----+                              
'           |                                 
' $t1, $colour1, $tags1                       
'           |                                 
'        $test1
'           |                                 
'           V
'          / \                                
'         |   ---------------------+          
'          \ /                     |          
'           |                      |          
' $t2=$false(), $colour2, $tags2  $t3=$true(), $colour3, $tags3
'           |                      |          
'           V                   $test3
'        +-----+                   |
'        | $b  |                   V
'        +-----+                  / \                                
'                                |   ---------------------+          
'                                 \ /                     |          
'                                  |                      |          
'                        $t4=$false(), $colour4, $tags4  $t5=$true(), $colour5, $tags5
'                                  |                      |          
'                                  V                   $test5
'                               +-----+                   |       
'                               | $c  |                   V       
'                               +-----+                  / \                      
'                                                       |   ---------------------+
'                                                        \ /                     |
'                                                         |                      |          
'                                               $t6=$false(), $colour6, $tags6  $t7=$true(), $colour7, $tags7
'                                                         |                      |          
'                                                         v                      v          
'                                                      +-----+                +-----+       
'                                                      | $d  |                | $e  |       
'                                                      +-----+                +-----+       
'
!procedure $transitions_3_choices(\
    $a,\
    $t1="",\
    $b="",\
    $c="",\
    $d="",\
    $e="",\
    $colour1="",\
    $t2=$false(),\
    $colour2="",\
    $t3=$true(),\
    $colour3="",\
    $t4=$false(),\
    $colour4="",\
    $t5=$true(),\
    $colour5="",\
    $t6=$false(),\
    $colour6="",\
    $t7=$true(),\
    $colour7="",\
    $tags1="",\
    $tags2="",\
    $tags3="",\
    $tags4="",\
    $tags5="",\
    $tags6="",\
    $tags7="",\
    $test1="",\
    $test3="",\
    $test5=""\
)
    !$choice1 = $new_node()

    !if $is_visible($tags2) || $is_visible($tags3)
        state $choice1 <<choice>>
    !else
        state $choice1 <<choice>> #transparent##transparent
    !endif

    !$choice2 = $new_node()

    !if $is_visible($tags4) || $is_visible($tags5)
        state $choice2 <<choice>>
    !else
        state $choice2 <<choice>> #transparent##transparent
    !endif

    !$choice3 = $new_node()

    !if $is_visible($tags6) || $is_visible($tags7)
        state $choice3 <<choice>>
    !else
        state $choice3 <<choice>> #transparent##transparent
    !endif

    $transition_test($a, $t1, $choice1, $colour1, $tags=$tags1, $test=$test1)
    $transition($choice1, $t2, $b, $colour2, $tags=$tags2)
    $transition_test($choice1, $t3, $choice2, $colour3, $tags=$tags3, $test=$test3)
    $transition($choice2, $t4, $c, $colour4, $tags=$tags4)
    $transition_test($choice2, $t5, $choice3, $colour5, $tags=$tags5, $test=$test5)
    $transition($choice3, $t6, $d, $colour6, $tags=$tags6)
    $transition($choice3, $t7, $e, $colour7, $tags=$tags7)
!endprocedure

' Create transitions to five other states via four choices
'
'        +-----+                              
'        | $a  |                              
'        +-----+                              
'           |                                 
' $t1, $colour1, $tags1                       
'           |                                 
'        $test1
'           |                                 
'           V
'          / \                                
'         |   ---------------------+          
'          \ /                     |          
'           |                      |          
' $t2=$false(), $colour2, $tags2  $t3=$true(), $colour3, $tags3
'           |                      |          
'           V                   $test3
'        +-----+                   |
'        | $b  |                   V
'        +-----+                  / \                                
'                                |   ---------------------+          
'                                 \ /                     |          
'                                  |                      |          
'                        $t4=$false(), $colour4, $tags4  $t5=$true(), $colour5, $tags5
'                                  |                      |          
'                                  V                   $test5
'                               +-----+                   |       
'                               | $c  |                   V       
'                               +-----+                  / \                      
'                                                       |   ---------------------+
'                                                        \ /                     |
'                                                         |                      |          
'                                               $t6=$false(), $colour6, $tags6  $t7=$true(), $colour7, $tags7
'                                                         |                      |          
'                                                         v                   $test7
'                                                      +-----+                   |
'                                                      | $d  |                   V
'                                                      +-----+                  / \                      
'                                                                              |   ---------------------+
'                                                                               \ /                     |
'                                                                                |                      |          
'                                                                      $t8=$false(), $colour8, $tags8  $t9=$true(), $colour9, $tags9
'                                                                                |                      |          
'                                                                                v                      v          
'                                                                             +-----+                +-----+       
'                                                                             | $e  |                | $f  |       
'                                                                             +-----+                +-----+       
'
!procedure $transitions_4_choices(\
    $a,\
    $t1="",\
    $b="",\
    $c="",\
    $d="",\
    $e="",\
    $f="",\
    $colour1="",\
    $t2=$false(),\
    $colour2="",\
    $t3=$true(),\
    $colour3="",\
    $t4=$false(),\
    $colour4="",\
    $t5=$true(),\
    $colour5="",\
    $t6=$false(),\
    $colour6="",\
    $t7=$true(),\
    $colour7="",\
    $t8=$false(),\
    $colour8="",\
    $t9=$true(),\
    $colour9="",\
    $tags1="",\
    $tags2="",\
    $tags3="",\
    $tags4="",\
    $tags5="",\
    $tags6="",\
    $tags7="",\
    $tags8="",\
    $tags9="",\
    $test1="",\
    $test3="",\
    $test5="",\
    $test7=""\
)
    !$choice1 = $new_node()

    !if $is_visible($tags2) || $is_visible($tags3)
        state $choice1 <<choice>>
    !else
        state $choice1 <<choice>> #transparent##transparent
    !endif

    !$choice2 = $new_node()

    !if $is_visible($tags4) || $is_visible($tags5)
        state $choice2 <<choice>>
    !else
        state $choice2 <<choice>> #transparent##transparent
    !endif

    !$choice3 = $new_node()

    !if $is_visible($tags6) || $is_visible($tags7)
        state $choice3 <<choice>>
    !else
        state $choice3 <<choice>> #transparent##transparent
    !endif

    !$choice4 = $new_node()

    !if $is_visible($tags8) || $is_visible($tags9)
        state $choice4 <<choice>>
    !else
        state $choice4 <<choice>> #transparent##transparent
    !endif

    $transition_test($a, $t1, $choice1, $colour1, $tags=$tags1, $test=$test1)
    $transition($choice1, $t2, $b, $colour2, $tags=$tags2)
    $transition_test($choice1, $t3, $choice2, $colour3, $tags=$tags3, $test=$test3)
    $transition($choice2, $t4, $c, $colour4, $tags=$tags4)
    $transition_test($choice2, $t5, $choice3, $colour5, $tags=$tags5, $test=$test5)
    $transition($choice3, $t6, $d, $colour6, $tags=$tags6)
    $transition_test($choice3, $t7, $choice4, $colour7, $tags=$tags7, $test=$test7)
    $transition($choice4, $t8, $e, $colour8, $tags=$tags8)
    $transition($choice4, $t9, $f, $colour9, $tags=$tags9)
!endprocedure

' Create transitions to six other states via five choices
'
'        +-----+                              
'        | $a  |                              
'        +-----+                              
'           |                                 
' $t1, $colour1, $tags1                       
'           |                                 
'        $test1
'           |                                 
'           V
'          / \                                
'         |   ---------------------+          
'          \ /                     |          
'           |                      |          
' $t2=false(), $colour2, $tags2  $t3=true(), $colour3, $tags3
'           |                      |          
'           V                   $test3
'        +-----+                   |
'        | $b  |                   V
'        +-----+                  / \                                
'                                |   ---------------------+          
'                                 \ /                     |          
'                                  |                      |          
'                        $t4=false(), $colour4, $tags4  $t5=true(), $colour5, $tags5
'                                  |                      |          
'                                  V                   $test5
'                               +-----+                   |       
'                               | $c  |                   V       
'                               +-----+                  / \                      
'                                                       |   ---------------------+
'                                                        \ /                     |
'                                                         |                      |          
'                                               $t6=false(), $colour6, $tags6  $t7=true(), $colour7, $tags7
'                                                         |                      |          
'                                                         v                   $test7
'                                                      +-----+                   |
'                                                      | $d  |                   V
'                                                      +-----+                  / \                      
'                                                                              |   ---------------------+
'                                                                               \ /                     |
'                                                                                |                      |          
'                                                                      $t8=false(), $colour8, $tags8  $t9=true(), $colour9, $tags9
'                                                                                |                      |          
'                                                                                v                   $test9
'                                                                             +-----+                   |
'                                                                             | $e  |                   V
'                                                                             +-----+                  / \                      
'                                                                                                     |   ---------------------+
'                                                                                                      \ /                     |
'                                                                                                       |                      |          
'                                                                                            $t10=false(), $colour10, $tags10  $t11=true(), $colour11, $tags11
'                                                                                                       |                      |          
'                                                                                                       v                      v          
'                                                                                                    +-----+                +-----+       
'                                                                                                    | $f  |                | $g  |       
'                                                                                                    +-----+                +-----+       
'
!procedure $transitions_5_choices(\
    $a,\
    $t1="",\
    $b="",\
    $c="",\
    $d="",\
    $e="",\
    $f="",\
    $g="",\
    $colour1="",\
    $t2=$false(),\
    $colour2="",\
    $t3=$true(),\
    $colour3="",\
    $t4=$false(),\
    $colour4="",\
    $t5=$true(),\
    $colour5="",\
    $t6=$false(),\
    $colour6="",\
    $t7=$true(),\
    $colour7="",\
    $t8=$false(),\
    $colour8="",\
    $t9=$true(),\
    $colour9="",\
    $t10=$false(),\
    $colour10="",\
    $t11=$true(),\
    $colour11="",\
    $tags1="",\
    $tags2="",\
    $tags3="",\
    $tags4="",\
    $tags5="",\
    $tags6="",\
    $tags7="",\
    $tags8="",\
    $tags9="",\
    $tags10="",\
    $tags11="",\
    $test1="",\
    $test3="",\
    $test5="",\
    $test7="",\
    $test9=""\
)
    !$choice1 = $new_node()

    !if $is_visible($tags2) || $is_visible($tags3)
        state $choice1 <<choice>>
    !else
        state $choice1 <<choice>> #transparent##transparent
    !endif

    !$choice2 = $new_node()

    !if $is_visible($tags4) || $is_visible($tags5)
        state $choice2 <<choice>>
    !else
        state $choice2 <<choice>> #transparent##transparent
    !endif

    !$choice3 = $new_node()

    !if $is_visible($tags6) || $is_visible($tags7)
        state $choice3 <<choice>>
    !else
        state $choice3 <<choice>> #transparent##transparent
    !endif

    !$choice4 = $new_node()

    !if $is_visible($tags8) || $is_visible($tags9)
        state $choice4 <<choice>>
    !else
        state $choice4 <<choice>> #transparent##transparent
    !endif

    !$choice5 = $new_node()

    !if $is_visible($tags10) || $is_visible($tags11)
        state $choice5 <<choice>>
    !else
        state $choice5 <<choice>> #transparent##transparent
    !endif

    $transition_test($a,       $t1,  $choice1, $colour1,  $tags=$tags1, $test=$test1)
    $transition(     $choice1, $t2,  $b,       $colour2,  $tags=$tags2              )
    $transition_test($choice1, $t3,  $choice2, $colour3,  $tags=$tags3, $test=$test3)
    $transition(     $choice2, $t4,  $c,       $colour4,  $tags=$tags4              )
    $transition_test($choice2, $t5,  $choice3, $colour5,  $tags=$tags5, $test=$test5)
    $transition(     $choice3, $t6,  $d,       $colour6,  $tags=$tags6              )
    $transition_test($choice3, $t7,  $choice4, $colour7,  $tags=$tags7, $test=$test7)
    $transition(     $choice4, $t8,  $e,       $colour8,  $tags=$tags8              )
    $transition_test($choice4, $t9,  $choice5, $colour9,  $tags=$tags9, $test=$test9)
    $transition(     $choice5, $t10, $f,       $colour10, $tags=$tags10             )
    $transition(     $choice5, $t11, $g,       $colour11, $tags=$tags11             )
!endprocedure

' Create transitions to seven other states via six choices
'
'        +-----+                              
'        | $a  |                              
'        +-----+                              
'           |                                 
' $t1, $colour1, $tags1                       
'           |                                 
'        $test1
'           |                                 
'           V
'          / \                                
'         |   |------------------------------+          
'          \ /                               |          
'           |                                |          
' $t2=false(), $colour2, $tags2  $t3=true(), $colour3, $tags3
'           |                                |          
'           V                             $test3
'        +-----+                             |
'        | $b  |                             V
'        +-----+                            / \                                
'                                          |   |------------------------------+          
'                                           \ /                               |          
'                                            |                                |          
'                                  $t4=false(), $colour4, $tags4  $t5=true(), $colour5, $tags5
'                                            |                                |          
'                                            V                             $test5
'                                         +-----+                             |       
'                                         | $c  |                             V       
'                                         +-----+                            / \                      
'                                                                           |   |---------------------------------------+
'                                                                            \ /                                        |
'                                                                             |                                         |          
'                                                                   $t6=false(), $colour6, $tags6           $t7=true(), $colour7, $tags7
'                                                                             |                                         |          
'                                                                          $test6                                    $test7                     
'                                                                             |                                         |                          
'                                                                             V                                         V                         
'                                                                            / \                                       / \                      
'                                                      +--------------------|   |-------+                             |   -------------------------------+
'                                                      |                     \ /        |                              \ /                               |
'                                                      |                      -         |                               |                                |          
'                                            $t8=false(), $colour8, $tags8  $t9=true(), $colour9, $tags9  $t10=false(), $colour10, $tags10  $t11=true(), $colour11, $tags11
'                                                      |                                |                               |                                |          
'                                                      v                                v                               v                             $test11
'                                                   +-----+                          +-----+                         +-----+                             |
'                                                   | $d  |                          | $e  |                         | $f  |                             V
'                                                   +-----+                          +-----+                         +-----+                            / \                      
'                                                                                                                                      +---------------|   |------------+
'                                                                                                                                      |                \ /             |
'                                                                                                                                      |                 -              |          
'                                                                                                                        $t12=false(), $colour12, $tags12  $t13=true(), $colour13, $tags13
'                                                                                                                                      |                                |          
'                                                                                                                                      v                                v          
'                                                                                                                                   +-----+                          +-----+       
'                                                                                                                                   | $g  |                          | $h  |       
'                                                                                                                                   +-----+                          +-----+       
'
!procedure $transitions_6_choices(\
    $a,\
    $t1="",\
    $b="",\
    $c="",\
    $d="",\
    $e="",\
    $f="",\
    $g="",\
    $h="",\
    $colour1="",\
    $t2=$false(),\
    $colour2="",\
    $t3=$true(),\
    $colour3="",\
    $t4=$false(),\
    $colour4="",\
    $t5=$true(),\
    $colour5="",\
    $t6=$false(),\
    $colour6="",\
    $t7=$true(),\
    $colour7="",\
    $t8=$false(),\
    $colour8="",\
    $t9=$true(),\
    $colour9="",\
    $t10=$false(),\
    $colour10="",\
    $t11=$true(),\
    $colour11="",\
    $t12=$false(),\
    $colour12="",\
    $t13=$true(),\
    $colour13="",\
    $tags1="",\
    $tags2="",\
    $tags3="",\
    $tags4="",\
    $tags5="",\
    $tags6="",\
    $tags7="",\
    $tags8="",\
    $tags9="",\
    $tags10="",\
    $tags11="",\
    $tags12="",\
    $tags13="",\
    $test1="",\
    $test3="",\
    $test5="",\
    $test6="",\
    $test7="",\
    $test11=""\
)
    !$choice1 = $new_node()

    !if $is_visible($tags2) || $is_visible($tags3)
        state $choice1 <<choice>>
    !else
        state $choice1 <<choice>> #transparent##transparent
    !endif

    !$choice2 = $new_node()

    !if $is_visible($tags4) || $is_visible($tags5)
        state $choice2 <<choice>>
    !else
        state $choice2 <<choice>> #transparent##transparent
    !endif

    !$choice3 = $new_node()

    !if $is_visible($tags6) || $is_visible($tags7)
        state $choice3 <<choice>>
    !else
        state $choice3 <<choice>> #transparent##transparent
    !endif

    !$choice4 = $new_node()

    !if $is_visible($tags8) || $is_visible($tags9)
        state $choice4 <<choice>>
    !else
        state $choice4 <<choice>> #transparent##transparent
    !endif

    !$choice5 = $new_node()

    !if $is_visible($tags10) || $is_visible($tags11)
        state $choice5 <<choice>>
    !else
        state $choice5 <<choice>> #transparent##transparent
    !endif

    !$choice6 = $new_node()

    !if $is_visible($tags12) || $is_visible($tags13)
        state $choice6 <<choice>>
    !else
        state $choice6 <<choice>> #transparent##transparent
    !endif

    $transition_test($a,       $t1,  $choice1, $colour1,  $tags=$tags1,  $test=$test1 )
    $transition(     $choice1, $t2,  $b,       $colour2,  $tags=$tags2                )
    $transition_test($choice1, $t3,  $choice2, $colour3,  $tags=$tags3,  $test=$test3 )
    $transition(     $choice2, $t4,  $c,       $colour4,  $tags=$tags4                )
    $transition_test($choice2, $t5,  $choice3, $colour5,  $tags=$tags5,  $test=$test5 )
    $transition_test($choice3, $t6,  $choice4, $colour6,  $tags=$tags6,  $test=$test6 )
    $transition_test($choice3, $t7,  $choice5, $colour7,  $tags=$tags7,  $test=$test7 )
    $transition(     $choice4, $t8,  $d,       $colour8,  $tags=$tags8                )
    $transition(     $choice4, $t9,  $e,       $colour9,  $tags=$tags9                )
    $transition(     $choice5, $t10, $f,       $colour10, $tags=$tags10               )
    $transition_test($choice5, $t11, $choice6, $colour11, $tags=$tags11, $test=$test11)
    $transition(     $choice6, $t12, $g,       $colour12, $tags=$tags12               )
    $transition(     $choice6, $t13, $h,       $colour13, $tags=$tags13               )
!endprocedure


' Incomplete draft of generic transition procedure
' !procedure $transition_tree(\
'     $stateA \
'     , $trigger \
'     , $action \
'     , $stateB \
'     , $stateC


!procedure $choice_end_transition($a, $t1="", $c="", $colour1="", $t2="", $colour2="", $t3="", $colour3="")
    !$choice = $a + "_choice"
    state $choice <<choice>>
    $transition($a, $t1, $choice)
    $end_transition($choice, $t2)
    $transition($choice, $t3, $c)
!endprocedure

!procedure $choice_end_choice_transition($a, $t1="", $d="", $e="", $colour1="", $t2="", $colour2="", $t3="", $colour3="", $t4="", $colour4="", $t5="", $colour5="")
    !$choice = $a + "_choice"
    !$choice1 = $choice + "_choice"
    state $choice <<choice>>
    state $choice1 <<choice>>
    $transition($a, $t1, $choice)
    $end_transition($choice, $t2)
    $transition($choice, $t3, $choice1)
    $transition($choice1, $t4, $d)
    $transition($choice1, $t5, $e)
!endprocedure

!procedure $draft_labels($font_size=72)
    center header <font color=red size=$font_size>""**DRAFT     DRAFT     DRAFT     DRAFT**""
!endprocedure

!function $guard_action($g, $a)
    !return $guard($g)+$br()+$a
!endfunction

!function $action1($text)
    !return "<br1>" + $text
!endfunction

!function $action2($text)
    !return "<br2>" + $text
!endfunction

!function $action($text)
    !return " /<br1>" + $text
!endfunction

!function $missing_actions()
    !return $action1("⋮")
!endfunction

!procedure $tokenise($token_string, $token_prefix="token", $delimiter=" ")
    !$i = 0

    !if ($token_string != "")
        !$token_string = $token_string + " "
        !$delimiter_position = %strpos($token_string, $delimiter)

        !while $delimiter_position > 0
            !$i = $i + 1
            !$token_name = "$" + $token_prefix + $i
            !$token = %substr($token_string, 0, $delimiter_position)
            !$token_string = %substr($token_string, $delimiter_position + 1, %strlen($token_string) - $delimiter_position)
            %set_variable_value($token_name, $token)
            !$delimiter_position = %strpos($token_string, $delimiter)
        !endwhile
    !endif
!endprocedure

!function $is_match($tags, $filter_prefix)
    !$tags = $tags + " "
    !$i = 1
    !$token_name = "$" + $filter_prefix + $i

    !while (%variable_exists($token_name))
        !$token_value = %get_variable_value($token_name) + " "

        !if (%strpos($tags, $token_value) >= 0)
            !return %true()
        !endif

        !$i = $i + 1
        !$token_name = "$" + $filter_prefix + $i
    !endwhile

    !return %false()
!endfunction

' Determine whether a item should be visible using its tags
'
' An item is deemed to be visible if any of the following are true:
'  - no tags
'  - no in filter and either no out filter or none of the tags are
'    in the out filter
'  - an in filter containing at least one of the tags
'
'  Returns:
'    Whether the item is visible
!function $is_visible($tags)
    !if $tags == ""
        !return %true()
    !endif

    !if $in == ""
        !if $out == ""
            !return %true()
        !endif

        !return %not($is_match($tags, "out"))
    !else
        !return $is_match($tags, "in")
    !endif
!endfunction

!procedure $add_note($text, $dir="", $tags="", $node="")
    !if $is_visible($tags)
        !if $dir == ""
            note as $new_note()
        !else
            !if $node == ""
                note $dir
            !else
                note $dir of $make_symbol($node)
            !endif
        !endif
'
        !$text = $strrepl($text, "<br>", %chr(10))
    !else
        !if $dir == ""
            note as $new_note() <<hidden>>
        !else
            !if $node == ""
                note $dir <<hidden>>
            !else
                note $dir of $make_symbol($node) <<hidden>>
            !endif
        !endif
'
        !$text = $strrepl($text, "<br>", %chr(10)+"<color:#transparent>")
        !$text = "<color:#transparent>" + $text
    !endif
'    
$text
    endnote
!endprocedure

!function $ui_content($content)
    !return "{{\nsalt\n"+$content+"\n}}"
!endfunction

!if %variable_exists("$in")
    $tokenise($in, "in")
!else
    !$in = ""
!endif

!if %variable_exists("$out")
    $tokenise($out, "out")
!else
    !$out = ""
!endif

@enduml
