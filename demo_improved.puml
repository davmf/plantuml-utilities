@startuml demo_improved

!include https://raw.githubusercontent.com/davmf/plantuml-utilities/develop/state_machine_routines.iuml

$super_state("Top") {
    $entry_point("Top_entry")
    $state("State_A", $entry="entry action 1<br>entry action 2", $do="do action 1<br>do action 2", $exit="exit action 1<br>exit action 2", $tags="s0")
    $state("State_B", $entry="entry action 1<br>entry action 2", $do="do action 1<br>do action 2", $exit="exit action 1<br>exit action 2")
    $state("State_C", $entry="entry action 1<br>entry action 2", $do="do action 1<br>do action 2", $exit="exit action 1<br>exit action 2", $tags="s2")
    $state("State_D", $do="do action 1<br>do action 2", $exit="exit action 1<br>exit action 2", $tags="s2 s3")
    $state("State_E", $entry="entry action 1<br>entry action 2", $do="do action 1<br>do action 2", $tags="s2 s3")
    $state("State_F", $entry="entry action 1<br>entry action 2", $do="do action 1<br>do action 2", $exit="exit action 1<br>exit action 2")
    $state("State_G", $entry="entry action 1<br>entry action 2", $do="do action 1<br>do action 2", $exit="exit action 1<br>exit action 2")

    $transition("[*]", "", "State_B", $tags="")
    $transition("State_F", $event("a long event name")+" [an event guard]"+$action("action 1")+$action1("action 2"), "State_C", $tags="s2")
    $transition("State_F", $event("a long event name"), "State_G", $tags="s1")
    $transition("State_G", $event("a long event name"), "Top_entry", $tags="")
    $transition("State_D", $event("a long event name"), "State_E", $tags="s2 s3")
    $transition("State_E", $event("a long event name"), "State_D", $tags="s3")
    $transition("State_E", $event("a long event name"), "State_G", $tags="s2 s3")
    $transition("State_C", $event("a long event name"), "State_G", $tags="s0")
    $transition("State_B", $event("a long event name"), "State_F", $tags="")
    $transition("Top_entry", $event("a long event name"), "State_G", $tags="s0")
    $transition("Top_entry", $event("a long event name"), "State_A", $tags="s0")
    $transition("Top_entry", $event("a long event name"), "State_G", $tags="s0")
    $transition("State_A", $event("a long event name"), "State_G", $tags="s0")
    $transitions_1_choice("State_C", $event("a long event name")+$action($guard("a subsequent condition")), "State_C", "State_D", $t2=$true(), $t3=$false(), $tags1="s2", $tags2="s0", $tags3="s2")
    $transitions_1_choice("State_A", $event("a long event name")+$action($guard("a subsequent condition")), "State_A", "State_G", $t2=$true(), $t3=$false(), $tags1="s0", $tags2="s0", $tags3="s0")
    $transitions_2_choices("State_F", $event("a long event name")+$action($guard("a subsequent condition")), "State_D", "State_C", "State_G", $t2=$true(), $t3=$false(), $t4=$true(), $t5=$false(), $tags1="s3", $tags2="s3", $tags3="s0", $tags4="s0", $tags5="s0")
}
$super_state_behaviour("Top", $entry="entry action 1<br>entry action 2", $do="do action 1<br>do action 2")

@enduml
